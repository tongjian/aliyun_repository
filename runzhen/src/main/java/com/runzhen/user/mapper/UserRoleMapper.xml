<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.runzhen.user.dao.UserRoleMapper">
  <resultMap id="BaseResultMap" type="com.runzhen.user.domain.UserRole">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="role_id" jdbcType="VARCHAR" property="roleId" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="active" jdbcType="VARCHAR" property="active" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    
    <result column="user_code" jdbcType="VARCHAR" property="userCode" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="role_code" jdbcType="VARCHAR" property="roleCode" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
  </resultMap>
  
  
  <sql id="Base_Column_List">
    ur.id, ur.user_id, ur.role_id, ur.create_date, ur.create_user, ur.update_date, ur.update_user, ur.active,ur.remark,
    ui.user_code,ui.user_name,
    ri.role_code,ri.role_name
  </sql>
  
  <sql id="Sql_Where">
	<where>
	   <if test="userId != null">
	     and ur.user_id = #{userId}
	   </if>
	   <if test="userCode != null and userCode != ''">
	     and ui.user_code like '%${userCode}%'
	   </if>
	   <if test="userName != null and userName != ''">
	     and ui.user_name like '%${userName}%'
	   </if>
	   <if test="roleId != null">
	     and ur.role_id = #{roleId}
	   </if>
	   <if test="roleCode != null and roleCode != ''">
	     and ri.role_code like '%${roleCode}%'
	   </if>
	   <if test="roleName != null and roleName != ''">
	     and ri.role_name like '%${roleName}%'
	   </if>
	   <if test="active != null and active != ''">
	     and ur.active = #{active}
	   </if>
	</where>
  </sql>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_role ur
    where ur.id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="findByInfo" parameterType="com.runzhen.user.domain.UserRole" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_role ur
    <include refid="Sql_Where" />
  </select>
  
  <select id="findRoleIdsByInfo" parameterType="com.runzhen.user.domain.UserRole" resultType="java.lang.Integer">
    select role_id
    from user_role ur
    <include refid="Sql_Where" />
  </select>
  
	<select id="selectByPage" parameterType="com.runzhen.user.domain.UserRole" resultMap="BaseResultMap">
	  select 
	  <include refid="Base_Column_List" />
	  from user_role ur
	  left join user_info ui on ui.user_id = ur.user_id
	  left join role_info ri on ri.role_id = ur.role_id
	  <include refid="Sql_Where" />
	  order by create_date desc
	  <if test="offset != null and limit != null">
     	limit #{offset},#{limit}
      </if>
	</select>
	
	<select id="getTotal" parameterType="com.runzhen.user.domain.UserRole" resultType="java.lang.Integer">
	  select count(1)
	  from user_role ur
	  left join user_info ui on ui.user_id = ur.user_id
	  left join role_info ri on ri.role_id = ur.role_id
	  <include refid="Sql_Where" />
	</select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.runzhen.user.domain.UserRole">
    insert into user_role (id, user_id, role_id, 
      create_date, create_user, update_date, 
      update_user, active, remark
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=VARCHAR}, #{active,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  
  <insert id="insertSelective" parameterType="com.runzhen.user.domain.UserRole">
    insert into user_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="active != null">
        active,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="active != null">
        #{active,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.runzhen.user.domain.UserRole">
    update user_role
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="active != null">
        active = #{active,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.runzhen.user.domain.UserRole">
    update user_role
    set user_id = #{userId,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      active = #{active,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <insert id="batchInsertUserRole" parameterType="java.util.List">
  	<foreach collection="list" item="item" open="" close="" separator=";">
	  	insert into user_role (id, user_id, role_id, 
	      create_date, create_user, update_date, 
	      update_user, active, remark
	      )
	    values (#{item.id,jdbcType=INTEGER}, #{item.userId,jdbcType=VARCHAR}, #{item.roleId,jdbcType=VARCHAR}, 
	      #{item.createDate,jdbcType=TIMESTAMP}, #{item.createUser,jdbcType=VARCHAR}, #{item.updateDate,jdbcType=TIMESTAMP}, 
	      #{item.updateUser,jdbcType=VARCHAR}, #{item.active,jdbcType=VARCHAR}, #{item.remark,jdbcType=VARCHAR}
	      )
  	</foreach>
  </insert>
  
  <!-- 根据用户id和角色id批量删除用户角色关系 -->
  <delete id="batchDeleteUserRole" parameterType="java.util.List">
  		<foreach collection="list" item="item" open="" close="" separator=";">
		   delete from user_role
		   where user_id = #{item.userId,jdbcType=INTEGER}
		   and role_id = #{item.roleId,jdbcType=INTEGER}
  		</foreach>
  </delete>
</mapper>